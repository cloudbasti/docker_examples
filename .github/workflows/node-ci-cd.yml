name: Node.js CI/CD Pipeline

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master ]

jobs:
  # Step 1: Quality Gates - npm commands (linting, testing, dependency audit)
  npm-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Run npm install and audit
        # npm audit checks for known vulnerabilities in dependencies
        # TODO: Add npm run lint and npm run test here for code quality
        run: |
          cd nodejs
          npm install
          npm audit --audit-level=high

  # Step 2: Security Scans - Container and dependency vulnerability scanning
  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Docker Compose
        run: |
          docker compose version
          docker --version
       
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Scan Dockerfile
        # Trivy scans Dockerfile for best practices and security misconfigurations
        run: |
          cd nodejs
          trivy config Dockerfile

      - name: Build Docker image
        run: |
          cd nodejs
          docker compose build

      - name: Show Docker containers
        if: ${{ always() }}
        run: |
          docker ps -a

      - name: Show logs for nodejs container
        if: ${{ always() }}
        run: |
          docker logs nodejs || echo 'No logs found for nodejs container.'

      - name: Scan Docker image
        # Trivy scans the built Docker image for OS vulnerabilities and package vulnerabilities
        run: trivy image nodejs-app:latest    

  # Step 3: Snyk Security Testing - Advanced dependency and container scanning
  snyk-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          cd nodejs
          npm install
      - name: Run Snyk test
        # Snyk scans for vulnerabilities in dependencies, provides detailed reports and remediation advice
        # For public repos: unlimited tests, detailed vulnerability analysis, and fix suggestions
        env:
          SNYK_API_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
          SNYK_ORGANIZATION: ${{ secrets.SNYK_ORGANIZATION }}
        run: |
          cd nodejs
          npm install -g snyk
          snyk test --org=${{ secrets.SNYK_ORGANIZATION }} --project-name=docker_examples-nodejs

  # Step 4: Build and Push - Create and publish Docker image
  push-to-dockerhub:
    needs: [trivy-scan, snyk-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:latest ./nodejs

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:latest    

